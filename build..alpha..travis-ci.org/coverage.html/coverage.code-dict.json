{"/home/travis/build/npmtest/node-npmtest-eslint-config-airbnb-base/test.js":"/* istanbul instrument in package npmtest_eslint_config_airbnb_base */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-eslint-config-airbnb-base/lib.npmtest_eslint_config_airbnb_base.js":"/* istanbul instrument in package npmtest_eslint_config_airbnb_base */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_eslint_config_airbnb_base = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_eslint_config_airbnb_base = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-eslint-config-airbnb-base/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-eslint-config-airbnb-base && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_eslint_config_airbnb_base */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_eslint_config_airbnb_base\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_eslint_config_airbnb_base.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_eslint_config_airbnb_base.rollup.js'] =\n            local.assetsDict['/assets.npmtest_eslint_config_airbnb_base.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_eslint_config_airbnb_base.__dirname + '/lib.npmtest_eslint_config_airbnb_base.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-eslint-config-airbnb-base/node_modules/eslint-config-airbnb-base/index.js":"module.exports = {\n  extends: [\n    './rules/best-practices',\n    './rules/errors',\n    './rules/node',\n    './rules/style',\n    './rules/variables',\n    './rules/es6',\n    './rules/imports',\n  ].map(require.resolve),\n  parserOptions: {\n    ecmaVersion: 2017,\n    sourceType: 'module',\n    ecmaFeatures: {\n      experimentalObjectRestSpread: true,\n    },\n  },\n  rules: {\n    strict: 'error',\n  },\n};\n","/home/travis/build/npmtest/node-npmtest-eslint-config-airbnb-base/node_modules/eslint-config-airbnb-base/legacy.js":"module.exports = {\n  extends: [\n    './rules/best-practices',\n    './rules/errors',\n    './rules/node',\n    './rules/style',\n    './rules/variables'\n  ].map(require.resolve),\n  env: {\n    browser: true,\n    node: true,\n    amd: false,\n    mocha: false,\n    jasmine: false\n  },\n  ecmaFeatures: {},\n  globals: {},\n  rules: {\n    'comma-dangle': ['error', 'never'],\n    'prefer-numeric-literals': 'off',\n    'no-restricted-properties': ['error', {\n      object: 'arguments',\n      property: 'callee',\n      message: 'arguments.callee is deprecated',\n    }, {\n      property: '__defineGetter__',\n      message: 'Please use Object.defineProperty instead.',\n    }, {\n      property: '__defineSetter__',\n      message: 'Please use Object.defineProperty instead.',\n    }],\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-eslint-config-airbnb-base/node_modules/eslint-config-airbnb-base/rules/best-practices.js":"module.exports = {\n  rules: {\n    // enforces getter/setter pairs in objects\n    'accessor-pairs': 'off',\n\n    // enforces return statements in callbacks of array's methods\n    // http://eslint.org/docs/rules/array-callback-return\n    'array-callback-return': 'error',\n\n    // treat var statements as if they were block scoped\n    'block-scoped-var': 'error',\n\n    // specify the maximum cyclomatic complexity allowed in a program\n    complexity: ['off', 11],\n\n    // enforce that class methods use \"this\"\n    // http://eslint.org/docs/rules/class-methods-use-this\n    'class-methods-use-this': ['error', {\n      exceptMethods: [],\n    }],\n\n    // require return statements to either always or never specify values\n    'consistent-return': 'error',\n\n    // specify curly brace conventions for all control statements\n    curly: ['error', 'multi-line'],\n\n    // require default case in switch statements\n    'default-case': ['error', { commentPattern: '^no default$' }],\n\n    // encourages use of dot notation whenever possible\n    'dot-notation': ['error', { allowKeywords: true }],\n\n    // enforces consistent newlines before or after dots\n    // http://eslint.org/docs/rules/dot-location\n    'dot-location': ['error', 'property'],\n\n    // require the use of === and !==\n    // http://eslint.org/docs/rules/eqeqeq\n    eqeqeq: ['error', 'always', { null: 'ignore' }],\n\n    // make sure for-in loops have an if statement\n    'guard-for-in': 'error',\n\n    // disallow the use of alert, confirm, and prompt\n    'no-alert': 'warn',\n\n    // disallow use of arguments.caller or arguments.callee\n    'no-caller': 'error',\n\n    // disallow lexical declarations in case/default clauses\n    // http://eslint.org/docs/rules/no-case-declarations.html\n    'no-case-declarations': 'error',\n\n    // disallow division operators explicitly at beginning of regular expression\n    // http://eslint.org/docs/rules/no-div-regex\n    'no-div-regex': 'off',\n\n    // disallow else after a return in an if\n    'no-else-return': 'error',\n\n    // disallow empty functions, except for standalone funcs/arrows\n    // http://eslint.org/docs/rules/no-empty-function\n    'no-empty-function': ['error', {\n      allow: [\n        'arrowFunctions',\n        'functions',\n        'methods',\n      ]\n    }],\n\n    // disallow empty destructuring patterns\n    // http://eslint.org/docs/rules/no-empty-pattern\n    'no-empty-pattern': 'error',\n\n    // disallow comparisons to null without a type-checking operator\n    'no-eq-null': 'off',\n\n    // disallow use of eval()\n    'no-eval': 'error',\n\n    // disallow adding to native types\n    'no-extend-native': 'error',\n\n    // disallow unnecessary function binding\n    'no-extra-bind': 'error',\n\n    // disallow Unnecessary Labels\n    // http://eslint.org/docs/rules/no-extra-label\n    'no-extra-label': 'error',\n\n    // disallow fallthrough of case statements\n    'no-fallthrough': 'error',\n\n    // disallow the use of leading or trailing decimal points in numeric literals\n    'no-floating-decimal': 'error',\n\n    // disallow reassignments of native objects or read-only globals\n    // http://eslint.org/docs/rules/no-global-assign\n    'no-global-assign': ['error', { exceptions: [] }],\n    // deprecated in favor of no-global-assign\n    'no-native-reassign': 'off',\n\n    // disallow implicit type conversions\n    // http://eslint.org/docs/rules/no-implicit-coercion\n    'no-implicit-coercion': ['off', {\n      boolean: false,\n      number: true,\n      string: true,\n      allow: [],\n    }],\n\n    // disallow var and named functions in global scope\n    // http://eslint.org/docs/rules/no-implicit-globals\n    'no-implicit-globals': 'off',\n\n    // disallow use of eval()-like methods\n    'no-implied-eval': 'error',\n\n    // disallow this keywords outside of classes or class-like objects\n    'no-invalid-this': 'off',\n\n    // disallow usage of __iterator__ property\n    'no-iterator': 'error',\n\n    // disallow use of labels for anything other then loops and switches\n    'no-labels': ['error', { allowLoop: false, allowSwitch: false }],\n\n    // disallow unnecessary nested blocks\n    'no-lone-blocks': 'error',\n\n    // disallow creation of functions within loops\n    'no-loop-func': 'error',\n\n    // disallow magic numbers\n    // http://eslint.org/docs/rules/no-magic-numbers\n    'no-magic-numbers': ['off', {\n      ignore: [],\n      ignoreArrayIndexes: true,\n      enforceConst: true,\n      detectObjects: false,\n    }],\n\n    // disallow use of multiple spaces\n    'no-multi-spaces': 'error',\n\n    // disallow use of multiline strings\n    'no-multi-str': 'error',\n\n    // disallow use of new operator when not part of the assignment or comparison\n    'no-new': 'error',\n\n    // disallow use of new operator for Function object\n    'no-new-func': 'error',\n\n    // disallows creating new instances of String, Number, and Boolean\n    'no-new-wrappers': 'error',\n\n    // disallow use of (old style) octal literals\n    'no-octal': 'error',\n\n    // disallow use of octal escape sequences in string literals, such as\n    // var foo = 'Copyright \\251';\n    'no-octal-escape': 'error',\n\n    // disallow reassignment of function parameters\n    // disallow parameter object manipulation except for specific exclusions\n    // rule: http://eslint.org/docs/rules/no-param-reassign.html\n    'no-param-reassign': ['error', {\n      props: true,\n      ignorePropertyModificationsFor: [\n        'acc', // for reduce accumulators\n        'e', // for e.returnvalue\n        'ctx', // for Koa routing\n        'req', // for Express requests\n        'request', // for Express requests\n        'res', // for Express responses\n        'response', // for Express responses\n        '$scope', // for Angular 1 scopes\n      ]\n    }],\n\n    // disallow usage of __proto__ property\n    'no-proto': 'error',\n\n    // disallow declaring the same variable more then once\n    'no-redeclare': 'error',\n\n    // disallow certain object properties\n    // http://eslint.org/docs/rules/no-restricted-properties\n    'no-restricted-properties': ['error', {\n      object: 'arguments',\n      property: 'callee',\n      message: 'arguments.callee is deprecated',\n    }, {\n      property: '__defineGetter__',\n      message: 'Please use Object.defineProperty instead.',\n    }, {\n      property: '__defineSetter__',\n      message: 'Please use Object.defineProperty instead.',\n    }, {\n      object: 'Math',\n      property: 'pow',\n      message: 'Use the exponentiation operator (**) instead.',\n    }],\n\n    // disallow use of assignment in return statement\n    'no-return-assign': 'error',\n\n    // disallow redundant `return await`\n    'no-return-await': 'error',\n\n    // disallow use of `javascript:` urls.\n    'no-script-url': 'error',\n\n    // disallow self assignment\n    // http://eslint.org/docs/rules/no-self-assign\n    'no-self-assign': 'error',\n\n    // disallow comparisons where both sides are exactly the same\n    'no-self-compare': 'error',\n\n    // disallow use of comma operator\n    'no-sequences': 'error',\n\n    // restrict what can be thrown as an exception\n    'no-throw-literal': 'error',\n\n    // disallow unmodified conditions of loops\n    // http://eslint.org/docs/rules/no-unmodified-loop-condition\n    'no-unmodified-loop-condition': 'off',\n\n    // disallow usage of expressions in statement position\n    'no-unused-expressions': ['error', {\n      allowShortCircuit: false,\n      allowTernary: false,\n      allowTaggedTemplates: false,\n    }],\n\n    // disallow unused labels\n    // http://eslint.org/docs/rules/no-unused-labels\n    'no-unused-labels': 'error',\n\n    // disallow unnecessary .call() and .apply()\n    'no-useless-call': 'off',\n\n    // disallow useless string concatenation\n    // http://eslint.org/docs/rules/no-useless-concat\n    'no-useless-concat': 'error',\n\n    // disallow unnecessary string escaping\n    // http://eslint.org/docs/rules/no-useless-escape\n    'no-useless-escape': 'error',\n\n    // disallow redundant return; keywords\n    // http://eslint.org/docs/rules/no-useless-return\n    'no-useless-return': 'error',\n\n    // disallow use of void operator\n    // http://eslint.org/docs/rules/no-void\n    'no-void': 'error',\n\n    // disallow usage of configurable warning terms in comments: e.g. todo\n    'no-warning-comments': ['off', { terms: ['todo', 'fixme', 'xxx'], location: 'start' }],\n\n    // disallow use of the with statement\n    'no-with': 'error',\n\n    // require using Error objects as Promise rejection reasons\n    // http://eslint.org/docs/rules/prefer-promise-reject-errors\n    // TODO: enable, semver-major\n    'prefer-promise-reject-errors': ['off', { allowEmptyReject: true }],\n\n    // require use of the second argument for parseInt()\n    radix: 'error',\n\n    // require `await` in `async function` (note: this is a horrible rule that should never be used)\n    // http://eslint.org/docs/rules/require-await\n    'require-await': 'off',\n\n    // requires to declare all vars on top of their containing scope\n    'vars-on-top': 'error',\n\n    // require immediate function invocation to be wrapped in parentheses\n    // http://eslint.org/docs/rules/wrap-iife.html\n    'wrap-iife': ['error', 'outside', { functionPrototypeMethods: false }],\n\n    // require or disallow Yoda conditions\n    yoda: 'error'\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-eslint-config-airbnb-base/node_modules/eslint-config-airbnb-base/rules/errors.js":"module.exports = {\n  rules: {\n    // require trailing commas in multiline object literals\n    'comma-dangle': ['error', {\n      arrays: 'always-multiline',\n      objects: 'always-multiline',\n      imports: 'always-multiline',\n      exports: 'always-multiline',\n      functions: 'always-multiline',\n    }],\n\n    // Disallow await inside of loops\n    // http://eslint.org/docs/rules/no-await-in-loop\n    'no-await-in-loop': 'error',\n\n    // Disallow comparisons to negative zero\n    // http://eslint.org/docs/rules/no-compare-neg-zero\n    // TODO: enable (semver-major)\n    'no-compare-neg-zero': 'off',\n\n    // disallow assignment in conditional expressions\n    'no-cond-assign': ['error', 'always'],\n\n    // disallow use of console\n    'no-console': 'warn',\n\n    // disallow use of constant expressions in conditions\n    'no-constant-condition': 'warn',\n\n    // disallow control characters in regular expressions\n    'no-control-regex': 'error',\n\n    // disallow use of debugger\n    'no-debugger': 'error',\n\n    // disallow duplicate arguments in functions\n    'no-dupe-args': 'error',\n\n    // disallow duplicate keys when creating object literals\n    'no-dupe-keys': 'error',\n\n    // disallow a duplicate case label.\n    'no-duplicate-case': 'error',\n\n    // disallow empty statements\n    'no-empty': 'error',\n\n    // disallow the use of empty character classes in regular expressions\n    'no-empty-character-class': 'error',\n\n    // disallow assigning to the exception in a catch block\n    'no-ex-assign': 'error',\n\n    // disallow double-negation boolean casts in a boolean context\n    // http://eslint.org/docs/rules/no-extra-boolean-cast\n    'no-extra-boolean-cast': 'error',\n\n    // disallow unnecessary parentheses\n    // http://eslint.org/docs/rules/no-extra-parens\n    'no-extra-parens': ['off', 'all', {\n      conditionalAssign: true,\n      nestedBinaryExpressions: false,\n      returnAssign: false,\n    }],\n\n    // disallow unnecessary semicolons\n    'no-extra-semi': 'error',\n\n    // disallow overwriting functions written as function declarations\n    'no-func-assign': 'error',\n\n    // disallow function or variable declarations in nested blocks\n    'no-inner-declarations': 'error',\n\n    // disallow invalid regular expression strings in the RegExp constructor\n    'no-invalid-regexp': 'error',\n\n    // disallow irregular whitespace outside of strings and comments\n    'no-irregular-whitespace': 'error',\n\n    // disallow the use of object properties of the global object (Math and JSON) as functions\n    'no-obj-calls': 'error',\n\n    // disallow use of Object.prototypes builtins directly\n    // http://eslint.org/docs/rules/no-prototype-builtins\n    'no-prototype-builtins': 'error',\n\n    // disallow multiple spaces in a regular expression literal\n    'no-regex-spaces': 'error',\n\n    // disallow sparse arrays\n    'no-sparse-arrays': 'error',\n\n    // Disallow template literal placeholder syntax in regular strings\n    // http://eslint.org/docs/rules/no-template-curly-in-string\n    'no-template-curly-in-string': 'error',\n\n    // Avoid code that looks like two expressions but is actually one\n    // http://eslint.org/docs/rules/no-unexpected-multiline\n    'no-unexpected-multiline': 'error',\n\n    // disallow unreachable statements after a return, throw, continue, or break statement\n    'no-unreachable': 'error',\n\n    // disallow return/throw/break/continue inside finally blocks\n    // http://eslint.org/docs/rules/no-unsafe-finally\n    'no-unsafe-finally': 'error',\n\n    // disallow negating the left operand of relational operators\n    // http://eslint.org/docs/rules/no-unsafe-negation\n    'no-unsafe-negation': 'error',\n    // disallow negation of the left operand of an in expression\n    // deprecated in favor of no-unsafe-negation\n    'no-negated-in-lhs': 'off',\n\n    // disallow comparisons with the value NaN\n    'use-isnan': 'error',\n\n    // ensure JSDoc comments are valid\n    // http://eslint.org/docs/rules/valid-jsdoc\n    'valid-jsdoc': 'off',\n\n    // ensure that the results of typeof are compared against a valid string\n    // http://eslint.org/docs/rules/valid-typeof\n    'valid-typeof': ['error', { requireStringLiterals: true }],\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-eslint-config-airbnb-base/node_modules/eslint-config-airbnb-base/rules/es6.js":"module.exports = {\n  env: {\n    es6: true\n  },\n  parserOptions: {\n    ecmaVersion: 6,\n    sourceType: 'module',\n    ecmaFeatures: {\n      generators: false,\n      objectLiteralDuplicateProperties: false\n    }\n  },\n\n  rules: {\n    // enforces no braces where they can be omitted\n    // http://eslint.org/docs/rules/arrow-body-style\n    // TODO: enable requireReturnForObjectLiteral?\n    'arrow-body-style': ['error', 'as-needed', {\n      requireReturnForObjectLiteral: false,\n    }],\n\n    // require parens in arrow function arguments\n    // http://eslint.org/docs/rules/arrow-parens\n    'arrow-parens': ['error', 'as-needed', {\n      requireForBlockBody: true,\n    }],\n\n    // require space before/after arrow function's arrow\n    // http://eslint.org/docs/rules/arrow-spacing\n    'arrow-spacing': ['error', { before: true, after: true }],\n\n    // verify super() callings in constructors\n    'constructor-super': 'error',\n\n    // enforce the spacing around the * in generator functions\n    // http://eslint.org/docs/rules/generator-star-spacing\n    'generator-star-spacing': ['error', { before: false, after: true }],\n\n    // disallow modifying variables of class declarations\n    // http://eslint.org/docs/rules/no-class-assign\n    'no-class-assign': 'error',\n\n    // disallow arrow functions where they could be confused with comparisons\n    // http://eslint.org/docs/rules/no-confusing-arrow\n    'no-confusing-arrow': ['error', {\n      allowParens: true,\n    }],\n\n    // disallow modifying variables that are declared using const\n    'no-const-assign': 'error',\n\n    // disallow duplicate class members\n    // http://eslint.org/docs/rules/no-dupe-class-members\n    'no-dupe-class-members': 'error',\n\n    // disallow importing from the same path more than once\n    // http://eslint.org/docs/rules/no-duplicate-imports\n    // replaced by https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-duplicates.md\n    'no-duplicate-imports': 'off',\n\n    // disallow symbol constructor\n    // http://eslint.org/docs/rules/no-new-symbol\n    'no-new-symbol': 'error',\n\n    // disallow specific imports\n    // http://eslint.org/docs/rules/no-restricted-imports\n    'no-restricted-imports': 'off',\n\n    // disallow to use this/super before super() calling in constructors.\n    // http://eslint.org/docs/rules/no-this-before-super\n    'no-this-before-super': 'error',\n\n    // disallow useless computed property keys\n    // http://eslint.org/docs/rules/no-useless-computed-key\n    'no-useless-computed-key': 'error',\n\n    // disallow unnecessary constructor\n    // http://eslint.org/docs/rules/no-useless-constructor\n    'no-useless-constructor': 'error',\n\n    // disallow renaming import, export, and destructured assignments to the same name\n    // http://eslint.org/docs/rules/no-useless-rename\n    'no-useless-rename': ['error', {\n      ignoreDestructuring: false,\n      ignoreImport: false,\n      ignoreExport: false,\n    }],\n\n    // require let or const instead of var\n    'no-var': 'error',\n\n    // require method and property shorthand syntax for object literals\n    // http://eslint.org/docs/rules/object-shorthand\n    'object-shorthand': ['error', 'always', {\n      ignoreConstructors: false,\n      avoidQuotes: true,\n    }],\n\n    // suggest using arrow functions as callbacks\n    'prefer-arrow-callback': ['error', {\n      allowNamedFunctions: false,\n      allowUnboundThis: true,\n    }],\n\n    // suggest using of const declaration for variables that are never modified after declared\n    'prefer-const': ['error', {\n      destructuring: 'any',\n      ignoreReadBeforeAssign: true,\n    }],\n\n    // Prefer destructuring from arrays and objects\n    // http://eslint.org/docs/rules/prefer-destructuring\n    // TODO: enable\n    'prefer-destructuring': ['off', {\n      array: true,\n      object: true,\n    }, {\n      enforceForRenamedProperties: false,\n    }],\n\n    // disallow parseInt() in favor of binary, octal, and hexadecimal literals\n    // http://eslint.org/docs/rules/prefer-numeric-literals\n    'prefer-numeric-literals': 'error',\n\n    // suggest using Reflect methods where applicable\n    // http://eslint.org/docs/rules/prefer-reflect\n    // TODO: enable?\n    'prefer-reflect': 'off',\n\n    // use rest parameters instead of arguments\n    // http://eslint.org/docs/rules/prefer-rest-params\n    'prefer-rest-params': 'error',\n\n    // suggest using the spread operator instead of .apply()\n    // http://eslint.org/docs/rules/prefer-spread\n    'prefer-spread': 'error',\n\n    // suggest using template literals instead of string concatenation\n    // http://eslint.org/docs/rules/prefer-template\n    'prefer-template': 'error',\n\n    // disallow generator functions that do not have yield\n    // http://eslint.org/docs/rules/require-yield\n    'require-yield': 'error',\n\n    // enforce spacing between object rest-spread\n    // http://eslint.org/docs/rules/rest-spread-spacing\n    'rest-spread-spacing': ['error', 'never'],\n\n    // import sorting\n    // http://eslint.org/docs/rules/sort-imports\n    'sort-imports': ['off', {\n      ignoreCase: false,\n      ignoreMemberSort: false,\n      memberSyntaxSortOrder: ['none', 'all', 'multiple', 'single'],\n    }],\n\n    // require a Symbol description\n    // http://eslint.org/docs/rules/symbol-description\n    'symbol-description': 'error',\n\n    // enforce usage of spacing in template strings\n    // http://eslint.org/docs/rules/template-curly-spacing\n    'template-curly-spacing': 'error',\n\n    // enforce spacing around the * in yield* expressions\n    // http://eslint.org/docs/rules/yield-star-spacing\n    'yield-star-spacing': ['error', 'after']\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-eslint-config-airbnb-base/node_modules/eslint-config-airbnb-base/rules/imports.js":"module.exports = {\n  env: {\n    es6: true\n  },\n  parserOptions: {\n    ecmaVersion: 6,\n    sourceType: 'module'\n  },\n  plugins: [\n    'import'\n  ],\n\n  settings: {\n    'import/resolver': {\n      node: {\n        extensions: ['.js', '.json']\n      }\n    },\n    'import/extensions': [\n      '.js',\n      '.jsx',\n    ],\n    'import/core-modules': [\n    ],\n    'import/ignore': [\n      'node_modules',\n      '\\\\.(coffee|scss|css|less|hbs|svg|json)$',\n    ],\n  },\n\n  rules: {\n    // Static analysis:\n\n    // ensure imports point to files/modules that can be resolved\n    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-unresolved.md\n    'import/no-unresolved': ['error', { commonjs: true, caseSensitive: true }],\n\n    // ensure named imports coupled with named exports\n    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/named.md#when-not-to-use-it\n    'import/named': 'off',\n\n    // ensure default import coupled with default export\n    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/default.md#when-not-to-use-it\n    'import/default': 'off',\n\n    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/namespace.md\n    'import/namespace': 'off',\n\n    // Helpful warnings:\n\n    // disallow invalid exports, e.g. multiple defaults\n    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/export.md\n    'import/export': 'error',\n\n    // do not allow a default import name to match a named export\n    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-named-as-default.md\n    'import/no-named-as-default': 'error',\n\n    // warn on accessing default export property names that are also named exports\n    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-named-as-default-member.md\n    'import/no-named-as-default-member': 'error',\n\n    // disallow use of jsdoc-marked-deprecated imports\n    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-deprecated.md\n    'import/no-deprecated': 'off',\n\n    // Forbid the use of extraneous packages\n    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-extraneous-dependencies.md\n    // paths are treated both as absolute paths, and relative to process.cwd()\n    'import/no-extraneous-dependencies': ['error', {\n      devDependencies: [\n        'test/**', // tape, common npm pattern\n        'tests/**', // also common npm pattern\n        'spec/**', // mocha, rspec-like pattern\n        '**/__tests__/**', // jest pattern\n        'test.js', // repos with a single test file\n        'test-*.js', // repos with multiple top-level test files\n        '**/*.test.js', // tests where the extension denotes that it is a test\n        '**/*.spec.js', // tests where the extension denotes that it is a test\n        '**/webpack.config.js', // webpack config\n        '**/webpack.config.*.js', // webpack config\n        '**/rollup.config.js', // rollup config\n        '**/gulpfile.js', // gulp config\n        '**/gulpfile.*.js', // gulp config\n        '**/Gruntfile', // grunt config\n      ],\n      optionalDependencies: false,\n    }],\n\n    // Forbid mutable exports\n    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-mutable-exports.md\n    'import/no-mutable-exports': 'error',\n\n    // Module systems:\n\n    // disallow require()\n    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-commonjs.md\n    'import/no-commonjs': 'off',\n\n    // disallow AMD require/define\n    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-amd.md\n    'import/no-amd': 'error',\n\n    // No Node.js builtin modules\n    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-nodejs-modules.md\n    // TODO: enable?\n    'import/no-nodejs-modules': 'off',\n\n    // Style guide:\n\n    // disallow non-import statements appearing before import statements\n    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/first.md\n    'import/first': ['error', 'absolute-first'],\n\n    // disallow non-import statements appearing before import statements\n    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/imports-first.md\n    // deprecated: use `import/first`\n    'import/imports-first': 'off',\n\n    // disallow duplicate imports\n    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-duplicates.md\n    'import/no-duplicates': 'error',\n\n    // disallow namespace imports\n    // TODO: enable?\n    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-namespace.md\n    'import/no-namespace': 'off',\n\n    // Ensure consistent use of file extension within the import path\n    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/extensions.md\n    'import/extensions': ['error', 'always', {\n      js: 'never',\n      jsx: 'never',\n    }],\n\n    // Enforce a convention in module import order\n    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/order.md\n    // TODO: enable?\n    'import/order': ['off', {\n      groups: ['builtin', 'external', 'internal', 'parent', 'sibling', 'index'],\n      'newlines-between': 'never',\n    }],\n\n    // Require a newline after the last import/require in a group\n    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/newline-after-import.md\n    'import/newline-after-import': 'error',\n\n    // Require modules with a single export to use a default export\n    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/prefer-default-export.md\n    'import/prefer-default-export': 'error',\n\n    // Restrict which files can be imported in a given folder\n    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-restricted-paths.md\n    'import/no-restricted-paths': 'off',\n\n    // Forbid modules to have too many dependencies\n    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/max-dependencies.md\n    'import/max-dependencies': ['off', { max: 10 }],\n\n    // Forbid import of modules using absolute paths\n    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-absolute-path.md\n    'import/no-absolute-path': 'error',\n\n    // Forbid require() calls with expressions\n    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-dynamic-require.md\n    'import/no-dynamic-require': 'error',\n\n    // prevent importing the submodules of other modules\n    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-internal-modules.md\n    'import/no-internal-modules': ['off', {\n      allow: [],\n    }],\n\n    // Warn if a module could be mistakenly parsed as a script by a consumer\n    // leveraging Unambiguous JavaScript Grammar\n    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/unambiguous.md\n    // this should not be enabled until this proposal has at least been *presented* to TC39.\n    // At the moment, it's not a thing.\n    'import/unambiguous': 'off',\n\n    // Forbid Webpack loader syntax in imports\n    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-webpack-loader-syntax.md\n    'import/no-webpack-loader-syntax': 'error',\n\n    // Prevent unassigned imports\n    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-unassigned-import.md\n    // importing for side effects is perfectly acceptable, if you need side effects.\n    'import/no-unassigned-import': 'off',\n\n    // Prevent importing the default as if it were named\n    // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-named-default.md\n    'import/no-named-default': 'error',\n  },\n};\n","/home/travis/build/npmtest/node-npmtest-eslint-config-airbnb-base/node_modules/eslint-config-airbnb-base/rules/node.js":"module.exports = {\n  env: {\n    node: true\n  },\n\n  rules: {\n    // enforce return after a callback\n    'callback-return': 'off',\n\n    // require all requires be top-level\n    // http://eslint.org/docs/rules/global-require\n    'global-require': 'error',\n\n    // enforces error handling in callbacks (node environment)\n    'handle-callback-err': 'off',\n\n    // disallow mixing regular variable and require declarations\n    'no-mixed-requires': ['off', false],\n\n    // disallow use of new operator with the require function\n    'no-new-require': 'error',\n\n    // disallow string concatenation with __dirname and __filename\n    // http://eslint.org/docs/rules/no-path-concat\n    'no-path-concat': 'error',\n\n    // disallow use of process.env\n    'no-process-env': 'off',\n\n    // disallow process.exit()\n    'no-process-exit': 'off',\n\n    // restrict usage of specified node modules\n    'no-restricted-modules': 'off',\n\n    // disallow use of synchronous methods (off by default)\n    'no-sync': 'off',\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-eslint-config-airbnb-base/node_modules/eslint-config-airbnb-base/rules/strict.js":"module.exports = {\n  rules: {\n    // babel inserts `'use strict';` for us\n    strict: ['error', 'never']\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-eslint-config-airbnb-base/node_modules/eslint-config-airbnb-base/rules/style.js":"module.exports = {\n  rules: {\n    // enforce spacing inside array brackets\n    'array-bracket-spacing': ['error', 'never'],\n\n    // enforce spacing inside single-line blocks\n    // http://eslint.org/docs/rules/block-spacing\n    'block-spacing': ['error', 'always'],\n\n    // enforce one true brace style\n    'brace-style': ['error', '1tbs', { allowSingleLine: true }],\n\n    // require camel case names\n    camelcase: ['error', { properties: 'never' }],\n\n    // enforce or disallow capitalization of the first letter of a comment\n    // http://eslint.org/docs/rules/capitalized-comments\n    'capitalized-comments': ['off', 'never', {\n      line: {\n        ignorePattern: '.*',\n        ignoreInlineComments: true,\n        ignoreConsecutiveComments: true,\n      },\n      block: {\n        ignorePattern: '.*',\n        ignoreInlineComments: true,\n        ignoreConsecutiveComments: true,\n      },\n    }],\n\n    // enforce spacing before and after comma\n    'comma-spacing': ['error', { before: false, after: true }],\n\n    // enforce one true comma style\n    'comma-style': ['error', 'last'],\n\n    // disallow padding inside computed properties\n    'computed-property-spacing': ['error', 'never'],\n\n    // enforces consistent naming when capturing the current execution context\n    'consistent-this': 'off',\n\n    // enforce newline at the end of file, with no multiple empty lines\n    'eol-last': ['error', 'always'],\n\n    // enforce spacing between functions and their invocations\n    // http://eslint.org/docs/rules/func-call-spacing\n    'func-call-spacing': ['error', 'never'],\n\n    // requires function names to match the name of the variable or property to which they are\n    // assigned\n    // http://eslint.org/docs/rules/func-name-matching\n    'func-name-matching': ['off', 'always', {\n      includeCommonJSModuleExports: false\n    }],\n\n    // require function expressions to have a name\n    // http://eslint.org/docs/rules/func-names\n    'func-names': 'warn',\n\n    // enforces use of function declarations or expressions\n    // http://eslint.org/docs/rules/func-style\n    // TODO: enable\n    'func-style': ['off', 'expression'],\n\n    // Blacklist certain identifiers to prevent them being used\n    // http://eslint.org/docs/rules/id-blacklist\n    'id-blacklist': 'off',\n\n    // this option enforces minimum and maximum identifier lengths\n    // (variable names, property names etc.)\n    'id-length': 'off',\n\n    // require identifiers to match the provided regular expression\n    'id-match': 'off',\n\n    // this option sets a specific tab width for your code\n    // http://eslint.org/docs/rules/indent\n    indent: ['error', 2, {\n      SwitchCase: 1,\n      VariableDeclarator: 1,\n      outerIIFEBody: 1,\n      // MemberExpression: null,\n      // CallExpression: {\n        // parameters: null,\n      // },\n      FunctionDeclaration: {\n        parameters: 1,\n        body: 1\n      },\n      FunctionExpression: {\n        parameters: 1,\n        body: 1\n      }\n    }],\n\n    // specify whether double or single quotes should be used in JSX attributes\n    // http://eslint.org/docs/rules/jsx-quotes\n    'jsx-quotes': ['off', 'prefer-double'],\n\n    // enforces spacing between keys and values in object literal properties\n    'key-spacing': ['error', { beforeColon: false, afterColon: true }],\n\n    // require a space before & after certain keywords\n    'keyword-spacing': ['error', {\n      before: true,\n      after: true,\n      overrides: {\n        return: { after: true },\n        throw: { after: true },\n        case: { after: true }\n      }\n    }],\n\n    // enforce position of line comments\n    // http://eslint.org/docs/rules/line-comment-position\n    // TODO: enable?\n    'line-comment-position': ['off', {\n      position: 'above',\n      ignorePattern: '',\n      applyDefaultPatterns: true,\n    }],\n\n    // disallow mixed 'LF' and 'CRLF' as linebreaks\n    // http://eslint.org/docs/rules/linebreak-style\n    'linebreak-style': ['error', 'unix'],\n\n    // enforces empty lines around comments\n    'lines-around-comment': 'off',\n\n    // require or disallow newlines around directives\n    // http://eslint.org/docs/rules/lines-around-directive\n    'lines-around-directive': ['error', {\n      before: 'always',\n      after: 'always',\n    }],\n\n    // specify the maximum depth that blocks can be nested\n    'max-depth': ['off', 4],\n\n    // specify the maximum length of a line in your program\n    // http://eslint.org/docs/rules/max-len\n    'max-len': ['error', 100, 2, {\n      ignoreUrls: true,\n      ignoreComments: false,\n      ignoreRegExpLiterals: true,\n      ignoreStrings: true,\n      ignoreTemplateLiterals: true,\n    }],\n\n    // specify the max number of lines in a file\n    // http://eslint.org/docs/rules/max-lines\n    'max-lines': ['off', {\n      max: 300,\n      skipBlankLines: true,\n      skipComments: true\n    }],\n\n    // specify the maximum depth callbacks can be nested\n    'max-nested-callbacks': 'off',\n\n    // limits the number of parameters that can be used in the function declaration.\n    'max-params': ['off', 3],\n\n    // specify the maximum number of statement allowed in a function\n    'max-statements': ['off', 10],\n\n    // restrict the number of statements per line\n    // http://eslint.org/docs/rules/max-statements-per-line\n    'max-statements-per-line': ['off', { max: 1 }],\n\n    // require multiline ternary\n    // http://eslint.org/docs/rules/multiline-ternary\n    // TODO: enable?\n    'multiline-ternary': ['off', 'never'],\n\n    // require a capital letter for constructors\n    'new-cap': ['error', {\n      newIsCap: true,\n      newIsCapExceptions: [],\n      capIsNew: false,\n      capIsNewExceptions: ['Immutable.Map', 'Immutable.Set', 'Immutable.List'],\n    }],\n\n    // disallow the omission of parentheses when invoking a constructor with no arguments\n    // http://eslint.org/docs/rules/new-parens\n    'new-parens': 'error',\n\n    // allow/disallow an empty newline after var statement\n    'newline-after-var': 'off',\n\n    // http://eslint.org/docs/rules/newline-before-return\n    'newline-before-return': 'off',\n\n    // enforces new line after each method call in the chain to make it\n    // more readable and easy to maintain\n    // http://eslint.org/docs/rules/newline-per-chained-call\n    'newline-per-chained-call': ['error', { ignoreChainWithDepth: 4 }],\n\n    // disallow use of the Array constructor\n    'no-array-constructor': 'error',\n\n    // disallow use of bitwise operators\n    // http://eslint.org/docs/rules/no-bitwise\n    'no-bitwise': 'error',\n\n    // disallow use of the continue statement\n    // http://eslint.org/docs/rules/no-continue\n    'no-continue': 'error',\n\n    // disallow comments inline after code\n    'no-inline-comments': 'off',\n\n    // disallow if as the only statement in an else block\n    // http://eslint.org/docs/rules/no-lonely-if\n    'no-lonely-if': 'error',\n\n    // disallow un-paren'd mixes of different operators\n    // http://eslint.org/docs/rules/no-mixed-operators\n    'no-mixed-operators': ['error', {\n      groups: [\n        ['+', '-', '*', '/', '%', '**'],\n        ['&', '|', '^', '~', '<<', '>>', '>>>'],\n        ['==', '!=', '===', '!==', '>', '>=', '<', '<='],\n        ['&&', '||'],\n        ['in', 'instanceof']\n      ],\n      allowSamePrecedence: false\n    }],\n\n    // disallow mixed spaces and tabs for indentation\n    'no-mixed-spaces-and-tabs': 'error',\n\n    // disallow use of chained assignment expressions\n    // http://eslint.org/docs/rules/no-multi-assign\n    'no-multi-assign': ['error'],\n\n    // disallow multiple empty lines and only one newline at the end\n    'no-multiple-empty-lines': ['error', { max: 2, maxEOF: 1 }],\n\n    // disallow negated conditions\n    // http://eslint.org/docs/rules/no-negated-condition\n    'no-negated-condition': 'off',\n\n    // disallow nested ternary expressions\n    'no-nested-ternary': 'error',\n\n    // disallow use of the Object constructor\n    'no-new-object': 'error',\n\n    // disallow use of unary operators, ++ and --\n    // http://eslint.org/docs/rules/no-plusplus\n    'no-plusplus': 'error',\n\n    // disallow certain syntax forms\n    // http://eslint.org/docs/rules/no-restricted-syntax\n    'no-restricted-syntax': [\n      'error',\n      {\n        selector: 'ForInStatement',\n        message: 'for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array.',\n      },\n      {\n        selector: 'ForOfStatement',\n        message: 'iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations.',\n      },\n      {\n        selector: 'LabeledStatement',\n        message: 'Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand.',\n      },\n      {\n        selector: 'WithStatement',\n        message: '`with` is disallowed in strict mode because it makes code impossible to predict and optimize.',\n      },\n    ],\n\n    // disallow space between function identifier and application\n    'no-spaced-func': 'error',\n\n    // disallow tab characters entirely\n    'no-tabs': 'error',\n\n    // disallow the use of ternary operators\n    'no-ternary': 'off',\n\n    // disallow trailing whitespace at the end of lines\n    'no-trailing-spaces': 'error',\n\n    // disallow dangling underscores in identifiers\n    'no-underscore-dangle': ['error', { allowAfterThis: false }],\n\n    // disallow the use of Boolean literals in conditional expressions\n    // also, prefer `a || b` over `a ? a : b`\n    // http://eslint.org/docs/rules/no-unneeded-ternary\n    'no-unneeded-ternary': ['error', { defaultAssignment: false }],\n\n    // disallow whitespace before properties\n    // http://eslint.org/docs/rules/no-whitespace-before-property\n    'no-whitespace-before-property': 'error',\n\n    // enforce the location of single-line statements\n    // http://eslint.org/docs/rules/nonblock-statement-body-position\n    'nonblock-statement-body-position': 'off',\n\n    // require padding inside curly braces\n    'object-curly-spacing': ['error', 'always'],\n\n    // enforce line breaks between braces\n    // http://eslint.org/docs/rules/object-curly-newline\n    // TODO: enable once https://github.com/eslint/eslint/issues/6488 is resolved\n    'object-curly-newline': ['off', {\n      ObjectExpression: { minProperties: 0, multiline: true },\n      ObjectPattern: { minProperties: 0, multiline: true }\n    }],\n\n    // enforce \"same line\" or \"multiple line\" on object properties.\n    // http://eslint.org/docs/rules/object-property-newline\n    'object-property-newline': ['error', {\n      allowMultiplePropertiesPerLine: true,\n    }],\n\n    // allow just one var statement per function\n    'one-var': ['error', 'never'],\n\n    // require a newline around variable declaration\n    // http://eslint.org/docs/rules/one-var-declaration-per-line\n    'one-var-declaration-per-line': ['error', 'always'],\n\n    // require assignment operator shorthand where possible or prohibit it entirely\n    // http://eslint.org/docs/rules/operator-assignment\n    'operator-assignment': ['error', 'always'],\n\n    // enforce operators to be placed before or after line breaks\n    'operator-linebreak': 'off',\n\n    // enforce padding within blocks\n    'padded-blocks': ['error', 'never'],\n\n    // require quotes around object literal property names\n    // http://eslint.org/docs/rules/quote-props.html\n    'quote-props': ['error', 'as-needed', { keywords: false, unnecessary: true, numbers: false }],\n\n    // specify whether double or single quotes should be used\n    quotes: ['error', 'single', { avoidEscape: true }],\n\n    // do not require jsdoc\n    // http://eslint.org/docs/rules/require-jsdoc\n    'require-jsdoc': 'off',\n\n    // require or disallow use of semicolons instead of ASI\n    semi: ['error', 'always'],\n\n    // enforce spacing before and after semicolons\n    'semi-spacing': ['error', { before: false, after: true }],\n\n    // requires object keys to be sorted\n    'sort-keys': ['off', 'asc', { caseSensitive: false, natural: true }],\n\n    // sort variables within the same declaration block\n    'sort-vars': 'off',\n\n    // require or disallow space before blocks\n    'space-before-blocks': 'error',\n\n    // require or disallow space before function opening parenthesis\n    // http://eslint.org/docs/rules/space-before-function-paren\n    'space-before-function-paren': ['error', {\n      anonymous: 'always',\n      named: 'never',\n      asyncArrow: 'always'\n    }],\n\n    // require or disallow spaces inside parentheses\n    'space-in-parens': ['error', 'never'],\n\n    // require spaces around operators\n    'space-infix-ops': 'error',\n\n    // Require or disallow spaces before/after unary operators\n    // http://eslint.org/docs/rules/space-unary-ops\n    'space-unary-ops': ['error', {\n      words: true,\n      nonwords: false,\n      overrides: {\n      },\n    }],\n\n    // require or disallow a space immediately following the // or /* in a comment\n    // http://eslint.org/docs/rules/spaced-comment\n    'spaced-comment': ['error', 'always', {\n      line: {\n        exceptions: ['-', '+'],\n        markers: ['=', '!'], // space here to support sprockets directives\n      },\n      block: {\n        exceptions: ['-', '+'],\n        markers: ['=', '!'], // space here to support sprockets directives\n        balanced: false,\n      }\n    }],\n\n    // Require or disallow spacing between template tags and their literals\n    // http://eslint.org/docs/rules/template-tag-spacing\n    // TODO: enable, semver-major\n    'template-tag-spacing': ['off', 'never'],\n\n    // require or disallow the Unicode Byte Order Mark\n    // http://eslint.org/docs/rules/unicode-bom\n    'unicode-bom': ['error', 'never'],\n\n    // require regex literals to be wrapped in parentheses\n    'wrap-regex': 'off'\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-eslint-config-airbnb-base/node_modules/eslint-config-airbnb-base/rules/variables.js":"module.exports = {\n  rules: {\n    // enforce or disallow variable initializations at definition\n    'init-declarations': 'off',\n\n    // disallow the catch clause parameter name being the same as a variable in the outer scope\n    'no-catch-shadow': 'off',\n\n    // disallow deletion of variables\n    'no-delete-var': 'error',\n\n    // disallow labels that share a name with a variable\n    // http://eslint.org/docs/rules/no-label-var\n    'no-label-var': 'error',\n\n    // disallow specific globals\n    'no-restricted-globals': 'off',\n\n    // disallow declaration of variables already declared in the outer scope\n    'no-shadow': 'error',\n\n    // disallow shadowing of names such as arguments\n    'no-shadow-restricted-names': 'error',\n\n    // disallow use of undeclared variables unless mentioned in a /*global */ block\n    'no-undef': 'error',\n\n    // disallow use of undefined when initializing variables\n    'no-undef-init': 'error',\n\n    // disallow use of undefined variable\n    // http://eslint.org/docs/rules/no-undefined\n    // TODO: enable?\n    'no-undefined': 'off',\n\n    // disallow declaration of variables that are not used in the code\n    'no-unused-vars': ['error', { vars: 'local', args: 'after-used', ignoreRestSiblings: true }],\n\n    // disallow use of variables before they are defined\n    'no-use-before-define': ['error', { functions: true, classes: true, variables: true }],\n  }\n};\n"}